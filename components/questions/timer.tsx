// import { Translate } from '~/i18n';
// import { useAuth } from '~/auth';
import { addSeconds, fromUnixTime } from 'date-fns';
import Cookies from 'js-cookie';
import React, { memo, useEffect, useState } from 'react';
// import useCountDown from 'react-countdown-hook';
import Countdown from 'react-countdown';

/******************************************************************
 *
 *  THIS COMPONENT WAS GENERATED BY NEXTCRAZY-CLI
 *
 ******************************************************************/
type TimerPrpps = {
   setIsTimeUp: React.Dispatch<React.SetStateAction<boolean>>;
   currentTime: number;
};
const Timer = ({ setIsTimeUp, currentTime }: TimerPrpps) => {
   const renderer = ({ seconds }: any) => {
      // Render a countdown
      return <span>{seconds}</span>;
   };
   // const [startDate, setStartDate] = useState(new Date());

   // const startDate = React.useRef(currentTime ? new Date(currentTime) : Date.now());

   return (
      <div className="inset-x-0 px-4  text-center text-white md:px-20">
         {/* <p>Time left: {timeLeft / 1000}</p> */}
         <p>
            Time left:{' '}
            <Countdown
               onComplete={() => {
                  setIsTimeUp(true);
               }}
               renderer={renderer}
               date={addSeconds(fromUnixTime(currentTime), 30)}
            />
         </p>
      </div>
   );
};

export default memo(Timer);
