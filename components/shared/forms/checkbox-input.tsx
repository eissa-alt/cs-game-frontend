// import { Translate } from '~/i18n';
// import { useAuth } from '~/auth';
import classNames from 'classnames';
import { forwardRef } from 'react';

/******************************************************************
 *
 *  THIS COMPONENT WAS GENERATED BY NEXTCRAZY-CLI
 *
 ******************************************************************/
export type InputProps = {
   label?: React.ReactNode;
   error?: React.ReactNode;
   name?: string;
   id?: string;
   innerRef?: any;
   disabled?: boolean;
   placeHolder?: string;
   autoComplete?: string;
   className?: string;
   groupClassName?: string;

   isRequired?: boolean;
   help?: React.ReactNode;
   // value?: string | number | readonly string[] | undefined;
} & React.HTMLAttributes<HTMLInputElement | HTMLTextAreaElement>;
const CheckboxInput = forwardRef<any, InputProps>(
   (
      {
         label,
         error,
         className,
         // labelClassName,
         groupClassName,
         disabled = false,
         id = '',

         // innerRef,
         autoComplete,
         placeHolder = '',
         isRequired = false,
         // value = '',
         help,
         ...props
      },
      ref
   ) => {
      // const { authenticated } = useAuth();

      return (
         <div className={groupClassName || classNames('relative mb-5 w-full py-5')}>
            <div className={classNames('relative flex')}>
               <label
                  htmlFor={id}
                  className={classNames(
                     'inline-block cursor-pointer font-light text-white',
                     isRequired && 'required-label'
                  )}>
                  <input
                     autoComplete={autoComplete}
                     id={id}
                     ref={ref}
                     // ref={innerRef}
                     type="checkbox"
                     placeholder={placeHolder}
                     // value={value}
                     className={
                        className ||
                        classNames(
                           'focus:shadow-outline-secondary text-secondary500 form-checkbox h-4 w-4 cursor-pointer rounded bg-transparent focus:border-secondary-400 focus:outline-none ltr:mr-2 rtl:ml-2',
                           // 'ltr:pl-20',
                           disabled && 'disabled:cursor-not-allowed disabled:opacity-50'
                        )
                     }
                     disabled={disabled}
                     {...props}
                  />
                  {label}
               </label>
            </div>
            {help && <div>{help}</div>}
            {error && typeof error !== 'boolean' && (
               <div className="absolute text-xs text-secondary-500" role="alert">
                  {error}
               </div>
            )}
         </div>
      );
   }
);
CheckboxInput.displayName = `CheckboxInput`;
export default CheckboxInput;
